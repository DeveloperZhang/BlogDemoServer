<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.blog.user.mapper.BlogUserMapper">
    
    <resultMap type="BlogUser" id="BlogUserResult">
        <result property="userId"    column="user_id"    />
        <result property="loginName"    column="login_name"    />
        <result property="password"    column="password"    />
        <result property="phone"    column="phone"    />
        <result property="sex"    column="sex"    />
        <result property="createTime"    column="create_time"    />
        <result property="nickName"    column="nick_name"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectBlogUserVo">
        select user_id, login_name, password, phone, sex, create_time, nick_name, remark from blog_user
    </sql>

    <select id="selectBlogUserList" parameterType="BlogUser" resultMap="BlogUserResult">
        <include refid="selectBlogUserVo"/>
        <where>  
            <if test="loginName != null  and loginName != ''"> and login_name like concat('%', #{loginName}, '%')</if>
            <if test="password != null  and password != ''"> and password = #{password}</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="sex != null  and sex != ''"> and sex = #{sex}</if>
            <if test="nickName != null  and nickName != ''"> and nick_name like concat('%', #{nickName}, '%')</if>
        </where>
    </select>
    
    <select id="selectBlogUserById" parameterType="String" resultMap="BlogUserResult">
        <include refid="selectBlogUserVo"/>
        where user_id = #{userId}
    </select>
        
    <insert id="insertBlogUser" parameterType="BlogUser">
        insert into blog_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="loginName != null">login_name,</if>
            <if test="password != null">password,</if>
            <if test="phone != null">phone,</if>
            <if test="sex != null">sex,</if>
            <if test="createTime != null">create_time,</if>
            <if test="nickName != null">nick_name,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="loginName != null">#{loginName},</if>
            <if test="password != null">#{password},</if>
            <if test="phone != null">#{phone},</if>
            <if test="sex != null">#{sex},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="nickName != null">#{nickName},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateBlogUser" parameterType="BlogUser">
        update blog_user
        <trim prefix="SET" suffixOverrides=",">
            <if test="loginName != null">login_name = #{loginName},</if>
            <if test="password != null">password = #{password},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="nickName != null">nick_name = #{nickName},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where user_id = #{userId}
    </update>

    <delete id="deleteBlogUserById" parameterType="String">
        delete from blog_user where user_id = #{userId}
    </delete>

    <delete id="deleteBlogUserByIds" parameterType="String">
        delete from blog_user where user_id in 
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>